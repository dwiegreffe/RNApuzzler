# Name of your program
package "RNAheat" # don't use package if you're using automake
purpose "calculate specific heat of RNAs"
usage "RNAheat [options]\n"

# Version of your program
#version "2.0"   # don't use version if you're using automake


# command line options passed to gengetopt
args "--file-name=RNAheat_cmdl --include-getopt --default-optional --func-name=RNAheat_cmdline_parser --arg-struct-name=RNAheat_args_info"


description "Reads RNA sequences from stdin and calculates their specific heat in the temperature range t1\
 to t2, from the partition function by numeric differentiation. The result is written to stdout as a list\
 of pairs of temperature in C and specific heat in Kcal/(Mol*K).\nThe program will continue to read new\
 sequences until a line consisting of the single character \"@\" or an end of file condition is encountered.\n"

# Options
section "General Options"
sectiondesc="Below are command line options which alter the general behavior of this program\n\n"

option  "Tmin"  -
"Lowest temperature\n\n"
float
default = "0"
typestr="t1"

option  "Tmax"  -
"Highest temperature\n\n"
float
default = "100"
typestr="t2"

option "stepsize" -
"Calculate partition function every stepsize degrees C\n\n"
float
default="1."

option "ipoints" m
"The program fits a parabola to 2*ipoints+1 data points to calculate 2nd derivatives. Increasing this parameter\
 produces a smoother curve\n\n"
int
typestr="ipoints"
default="2"

option  "noconv"  -
"Do not automatically substitude nucleotide \"T\" with \"U\"\n\n"
flag
off

option  "auto-id"  -
"Automatically generate an ID for each sequence.\n"
details="The default mode of RNAheat is to automatically determine an ID from the input sequence\
 data if the input file format allows to do that. Sequence IDs are usually given in the FASTA\
 header of input sequences. If this flag is active, RNAheat ignores any IDs retrieved from the\
 input and automatically generates an ID for each sequence. This ID consists of a prefix and an\
 increasing number. This flag can also be used to add a FASTA header to the output even if\
 the input has none.\n\n"
flag
off

option  "id-prefix" -
"Prefix for automatically generated IDs (as used in output file names)\n\n"
details="If this parameter is set, each sequences' FASTA id will be prefixed\
 with the provided string. FASTA ids then take the form \">prefix_xxxx\" where\
 xxxx is the sequence number. Note: Setting this parameter implies --auto-id.\n\n"
string
typestr="prefix"
default="sequence"
optional

option  "id-delim" -
"Change the delimiter between prefix and increasing number for automatically generated IDs (as used in output file names)\n\n"
details="This parameter can be used to change the default delimiter \"_\" between
 the prefix string and the increasing number for automatically generated ID.\n\n"
string
typestr="delimiter"
default="_"
optional
hidden

option  "id-digits"  -
"Specify the number of digits of the counter in automatically generated alignment IDs.\n"
details="When alignments IDs are automatically generated, they receive an increasing number, starting\
 with 1. This number will always be left-padded by leading zeros, such that the number takes up a\
 certain width. Using this parameter, the width can be specified to the users need. We allow\
 numbers in the range [1:18]. This option implies --auto-id.\n\n"
int
default="4"
optional
hidden

option  "id-start"  -
"Specify the first number in automatically generated alignment IDs.\n"
details="When sequence IDs are automatically generated, they receive an increasing number,\
 usually starting with 1. Using this parameter, the first number can be specified to the users\
 requirements. Note: negative numbers are not allowed.\nNote: Setting this parameter implies\
 to ignore any IDs retrieved from the input data, i.e. it activates the --auto-id flag.\n\n"
long
default="1"
optional
hidden

section "Model Details"

option  "noTetra" 4
"Do not include special tabulated stabilizing energies for tri-, tetra- and hexaloop hairpins. Mostly for testing.\n\n"
flag
off

option  "dangles" d
"How to treat \"dangling end\" energies for bases adjacent to helices in free ends and multi-loops\n"
details="\nWith -d2 dangling energies will be added for the bases adjacent to a helix on both sides\
 in any case\n\n-d0 ignores dangling ends altogether (mostly for debugging).\n\n"
int
default="2"
optional

option  "noLP"  -
"Produce structures without lonely pairs (helices of length 1).\n"
details="For partition function folding this only disallows pairs that can only occur isolated. Other\
 pairs may still occasionally occur as helices of length 1.\n\n"
flag
off

option  "noGU"  -
"Do not allow GU pairs\n\n"
flag
off

option  "noClosingGU" -
"Do not allow GU pairs at the end of helices\n\n"
flag
off

option  "paramFile" P
"Read energy parameters from paramfile, instead of using the default parameter set.\n"
details="A sample parameter file should accompany your distribution.\nSee the RNAlib\
 documentation for details on the file format.\n\n"
string
typestr="paramfile"
optional

option  "nsp" -
"Allow other pairs in addition to the usual AU,GC,and GU pairs.\n"
details="Its argument is a comma separated list of additionally allowed pairs. If the\
 first character is a \"-\" then AB will imply that AB and BA are allowed pairs.\ne.g.\
 RNAheat -nsp -GA  will allow GA and AG pairs. Nonstandard pairs are given 0 stacking\
 energy.\n\n"
string
optional
hidden

option  "energyModel" e
"Rarely used option to fold sequences from the artificial ABCD... alphabet, where\
 A pairs B, C-D etc.  Use the energy parameters for GC (-e 1) or AU (-e 2) pairs.\n\n"
int
optional
hidden


text    "\nIf in doubt our program is right, nature is at fault.\nComments should be sent to\
 rna@tbi.univie.ac.at.\n\n"
