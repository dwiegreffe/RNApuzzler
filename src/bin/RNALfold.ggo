# Name of your program
package "RNALfold" # don't use package if you're using automake
purpose "calculate locally stable secondary structures of RNAs"
#usage "RNALfold [options]\n"

# Version of your program
#version "2.0"   # don't use version if you're using automake


# command line options passed to gengetopt
args "--file-name=RNALfold_cmdl --include-getopt --default-optional --func-name=RNALfold_cmdline_parser --arg-struct-name=RNALfold_args_info"


description "Compute locally stable RNA secondary structure with a maximal base pair\
 span. For a sequence of length n and a base pair span of L the algorithm uses only\
 O(n+L*L) memory and O(n*L*L) CPU time. Thus it is practical to \"scan\" very large\
 genomes for short RNA structures.\nOutput consists of a list of secondary structure\
 components of size <= L, one entry per line. Each output line contains the predicted\
 local structure its energy in kcal/mol and the starting position of the local structure.\n"

# Options

section "General Options"
sectiondesc="Below are command line options which alter the general behavior of this program\n\n"

option  "span"  L
"Set the maximum allowed separation of a base pair to span. I.e. no pairs (i,j) with\
 j-i>span will be allowed.\n\n"
int
default="150"
optional

option  "noconv"  -
"Do not automatically substitude nucleotide \"T\" with \"U\"\n\n"
flag
off

option  "outfile" o
"Print output to file instead of stdout\n"
details="This option may be used to write all output to output files rather than printing\
 to stdout. The default filename is \"RNALfold_output.lfold\" if no FASTA header precedes\
 the input sequences and the --auto-id feature is inactive. Otherwise, output files with\
 the scheme \"prefix.lfold\" are generated, where the \"prefix\" is taken from the sequence\
 id. The user may specify a single output file name for all data generated from the input\
 by supplying an optional string as argument to this parameter. In case a file with the same\
 filename already exists, any output of the program will be appended to it.\
 Note: Any special characters in the filename will be replaced by the filename delimiter,\
 hence there is no way to pass an entire directory path through this option yet.\
 (See also the \"--filename-delim\" parameter)\n\n"
string
typestr="<filename>"
argoptional
optional

option  "infile"  i
"Read a file instead of reading from stdin\n"
details="The default behavior of RNALfold is to read input from stdin. Using this parameter\
 the user can specify an input file name where data is read from.\n\n"
string
typestr="<filename>"
optional

option  "auto-id"  -
"Automatically generate an ID for each sequence.\n"
details="The default mode of RNALfold is to automatically determine an ID from the input sequence\
 data if the input file format allows to do that. Sequence IDs are usually given in the FASTA\
 header of input sequences. If this flag is active, RNALfold ignores any IDs retrieved from the\
 input and automatically generates an ID for each sequence. This ID consists of a prefix and an\
 increasing number. This flag can also be used to add a FASTA header to the output even if\
 the input has none.\n\n"
flag
off

option  "id-prefix" -
"Prefix for automatically generated IDs (as used in output file names)\n\n"
details="If this parameter is set, each sequence will be prefixed with the\
 provided string. Hence, the output files will obey the following naming\
 scheme: \"prefix_xxxx.lfold\" where xxxx is the sequence number. Note:\
 Setting this parameter implies --auto-id.\n\n"
string
typestr="prefix"
default="sequence"
optional

option  "id-delim" -
"Change the delimiter between prefix and increasing number for automatically generated IDs (as used in output file names)\n\n"
details="This parameter can be used to change the default delimiter \"_\" between
 the prefix string and the increasing number for automatically generated ID.\n\n"
string
typestr="delimiter"
default="_"
optional
hidden

option  "id-digits"  -
"Specify the number of digits of the counter in automatically generated alignment IDs.\n"
details="When alignments IDs are automatically generated, they receive an increasing number, starting\
 with 1. This number will always be left-padded by leading zeros, such that the number takes up a\
 certain width. Using this parameter, the width can be specified to the users need. We allow\
 numbers in the range [1:18]. This option implies --auto-id.\n\n"
int
default="4"
optional
hidden

option  "id-start"  -
"Specify the first number in automatically generated alignment IDs.\n"
details="When sequence IDs are automatically generated, they receive an increasing number,\
 usually starting with 1. Using this parameter, the first number can be specified to the users\
 requirements. Note: negative numbers are not allowed.\nNote: Setting this parameter implies\
 to ignore any IDs retrieved from the input data, i.e. it activates the --auto-id flag.\n\n"
long
default="1"
optional
hidden

option  "filename-delim" -
"Change the delimiting character that is used for sanitized filenames\n\n"
details="This parameter can be used to change the delimiting character used while\
 sanitizing filenames, i.e. replacing invalid characters. Note, that the default\
 delimiter ALWAYS is the first character of the \"ID delimiter\" as supplied through\
 the --id-delim option. If the delimiter is a whitespace character or empty, invalid\
 characters will be simply removed rather than substituted.\
 Currently, we regard the following characters as illegal for use in filenames:\
 backslash '\', slash '/', question mark '?', percent sign '%', asterisk '*', colon ':',\
 pipe symbol '|', double quote '\"', triangular brackets '<' and '>'.\n\n"
string
typestr="delimiter"
default="ID-delimiter"
optional
hidden

option  "filename-full" -
"Use full FASTA header to create filenames\n\n"
details="This parameter can be used to deactivate the default behavior of limiting\
 output filenames to the first word of the sequence ID. Consider the following example:\
 An input with FASTA header \">NM_0001 Homo Sapiens some gene\" usually produces output\
 files with the prefix \"NM_0001\" without the additional data available in the FASTA\
 header, e.g. \"NM_0001.lfold\". With this flag set, no truncation of the output filenames\
 is performed, i.e. output filenames receive the full FASTA header data as prefixes. Note,\
 however, that invalid characters (such as whitespace) will be substituted by a delimiting\
 character or simply removed, (see also the parameter option --filename-delim).\n\n"
flag
off
hidden

section "Algorithms"
sectiondesc="Select additional algorithms which should be included in the calculations.\nThe Minimum free energy\
 (MFE) and a structure representative are calculated in any case.\n\n"

option  "zscore"  z
"Activate z-score computation. An optional argument may be supplied to set the threshold\nDue to parsing the\
 commandline parameters a negative value should be given immediately after \"z\" without spaces e.g. -z-4.9\n\n"
double
default="-2"
argoptional
optional

option  "gquad" g
"Incoorporate G-Quadruplex formation into the structure prediction algorithm\n\n"
flag
off


section "Model Details"

option  "temp"  T
"Rescale energy parameters to a temperature of temp C. Default is 37C.\n\n"
double
optional

option  "noTetra" 4
"Do not include special tabulated stabilizing energies for tri-, tetra- and hexaloop hairpins. Mostly for testing.\n\n"
flag
off

option  "dangles" d
"How to treat \"dangling end\" energies for bases adjacent to helices in free ends and multi-loops\n"
details="\nWith -d1 only unpaired bases can participate in at most one dangling end, this is the\
 default for mfe folding but unsupported for the partition function folding.\n\nWith -d2 this check is ignored,\
 dangling energies will be added for the bases adjacent to a helix on both sides in any case; this is the\
 default for partition function folding (-p).\nThe option -d0 ignores dangling ends altogether (mostly for\
 debugging).\nWith -d3 mfe folding will allow coaxial stacking of adjacent helices in multi-loops. At the\
 moment the implementation will not allow coaxial stacking of the two interior pairs in a loop of degree 3\
 and works only for mfe folding.\n\nNote that by default (as well as with -d1 and -d3) pf and mfe folding\
 treat dangling ends differently. Use -d2 in addition to -p to ensure that both algorithms use the same\
 energy model.\n\n"
int
default="2"
optional

option  "noLP"  -
"Produce structures without lonely pairs (helices of length 1).\n"
details="For partition function folding this only disallows pairs that can only occur isolated. Other\
 pairs may still occasionally occur as helices of length 1.\n\n"
flag
off

option  "noGU"  -
"Do not allow GU pairs\n\n"
flag
off

option  "noClosingGU" -
"Do not allow GU pairs at the end of helices\n\n"
flag
off

option  "paramFile" P
"Read energy parameters from paramfile, instead of using the default parameter set.\n"
details="A sample parameter file should accompany your distribution.\nSee the RNAlib\
 documentation for details on the file format.\n\n"
string
typestr="paramfile"
optional

option  "nsp" -
"Allow other pairs in addition to the usual AU,GC,and GU pairs.\n"
details="Its argument is a comma separated list of additionally allowed pairs. If the\
 first character is a \"-\" then AB will imply that AB and BA are allowed pairs.\ne.g.\
 RNALfold -nsp -GA  will allow GA and AG pairs. Nonstandard pairs are given 0 stacking\
 energy.\n\n"
string
optional
hidden

option  "energyModel" e
"Rarely used option to fold sequences from the artificial ABCD... alphabet, where\
 A pairs B, C-D etc.  Use the energy parameters for GC (-e 1) or AU (-e 2) pairs.\n\n"
int
optional
hidden

text    "\nIf in doubt our program is right, nature is at fault.\nComments should be sent to\
 rna@tbi.univie.ac.at.\n\n"
